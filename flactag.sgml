<!doctype linuxdoc system>
<article>
<title>FLACTAG v1.0-RC1
<author>Andy Hawkins <url url="mailto:andy@gently.org.uk" name="andy@gently.org.uk">
<abstract>
A utility for tagging single album FLAC files with embedded CUE sheets 
using data from the <url url="http://www.musicbrainz.org" name="MusicBrainz"> service.
</abstract>
<toc>
<sect>Downloading
<p>
The latest version of flactag can always be found <url url="http://www.gently.org.uk/flactag" name="here">.

The current version is <url url="flactag-1.0-RC1.tar.gz" name="v1.0-RC1">.
<sect>Requirements
<p>
<itemize>
<item><url url="http://musicbrainz.org/doc/libmusicbrainzDownload" name="libmusicbrainz"> (I used version 2.1.4)
<item><url url="http://flac.sourceforge.net/download.html" name="libflac++"> (I used version 1.1.1)
<item><url url="http://www.s-lang.org/download.html" name="S-Lang"> (I used version 1.4.9)
<item><url url="http://http-fetcher.sourceforge.net/downloads.html" name="http-fetcher"> (I used version 1.0.1)
<item><url url="http://www.nongnu.org/unac/" name="unac"> (I used version 1.8.0 from Debian)
</itemize>
<sect>Building
<p>
To build the software, simply run '<bf>make</bf>' in the directory you have extracted the 
archive into. The build process should complete with no errors. You will be left 
with the following executables:
<itemize>
<item><bf>flactag</bf> - The main application
<item><bf>discid</bf> - A test utility to read the disc ID from a CD
</itemize>
<sect>Ripping CDs to FLAC
<p>
I use the following script to rip my CDs to a single FLAC:
<code>
#!/bin/sh

if [ $1 ]
then

        FILENAME="$1-`date +"%Y-%m-%d.%H:%M:%S"`-$$"
        cdrdao read-cd --device /dev/hdc --driver generic-mmc \
        		--datafile $FILENAME.bin $FILENAME.toc
        cueconvert $FILENAME.toc $FILENAME.cue
        if flac -8 --replay-gain --endian=big --sign=signed \
        		--channels=2 --bps=16 --sample-rate=44100 \
        		--cuesheet=$FILENAME.cue $FILENAME.bin
        then
                rm -f $FILENAME.bin
                rm -f $FILENAME.toc
                rm -f $FILENAME.cue
        fi
else
        echo "Usage: $0 cdname"
fi
</code>

This script accepts one argument, the 'base' name of the CD you're ripping. The 
current date and time are appended to this base name. You will end up with a 
FLAC file ready to be used with flactag.

<sect>Using flactag

<sect1>Interactive mode

<p>
flactac should be executed from a linux console prompt, giving the path to the 
FLAC files to tag as its arguments as follows:

<tt>./flactag victory.flac absent.flac</tt>

(filenames can be quoted if they contain special characters to avoid having 
to 'escape' these characters).

If the flactag utility does not find information for your CD, a URL will be 
provided to submit information for your CD. Often the MusicBrainz server will 
have information about the tracks and artist, but cannot match this up to your 
CD. In these circumstances, it is simply a matter of 'associating' your CDs 
DiskID with the correct album data on the MusicBrainz server. In other 
instances, you may be required to enter the track and album information into the 
MusicBrainz service. Once you have entered this information, you can re-run 
flactag, and the data should be downloaded from the MusicBrainz server.

If the flactag utility finds information for your CD at the musicbrainz server, 
the application's main window will be shown (see <url 
url="http://www.gently.org.uk/flactag/flactag.jpg" name="here">). This contains 
three main areas:

<enum> 

<item>The 'Albums' window. This will contain a list of albums that match 
the DiskID for your FLAC file.

<item>The 'Tracks' window. This contains a list of all the tracks on the 
currently selected album.

<item>The 'Tags' window. At startup, this will contain a list of the tags 
currently found in your FLAC file. If there are no tags present, then an empty 
set appropriate for the album will be displayed. If you make changes to these 
tags, an asterisk ('*') will be displayed to indicate that this information has 
been changed. 

</enum>
   
The currently active window will be highlighted by the border and window title 
changing colour. To switch between the three windows, press the '<bf>TAB</bf>' key. To 
scroll around the active window, use the cursor UP and DOWN keys. Scolling in 
the 'Albums' window will update the information in the 'Tracks' window 
appropriately.

Once the appropriate album has been selected, pressing '<bf>c</bf>' will copy the tags 
for that album into the 'Tags' window. These tags can then be saved to the FLAC 
file by pressing the '<bf>w</bf>' key.

Pressing '<bf>r</bf>' will rename the file based on the settings in the 
configuration file (~/.flactag - this file is created automatically the first 
time you run <bf>flactag</bf>). Note that this facility uses the tags that are 
actually written to the file, so should generally be performed after the new 
tags have been written. This option will be unavailable if the filename and 
location are already correct.

Pressing '<bf>q</bf>' will move to the next file specified on the command line. 
If all files have been processed, the application will exit.

<sect1>Batch mode

<p>

Alternatively, flactag can be used in 'batch' mode to automatically check tags, 
write them and rename the file. Care should be taken when using these options.

The following command line options are understood:

<itemize>

<item><bf>--check (-c)</bf> - This option will compare the file's tags against those 
returned from the MusicBrainz service. A message will be displayed indicating 
where the tags match or not.

<item><bf>--write (-w)</bf> - This option implies <bf>--check</bf>. If the files tags differ 
from those returned from the MusicBrainz service, the tags will be written to 
the file.

<item><bf>--rename (-r)</bf> - The filename will be compared with that specified by the 
rename rules, and if it doesn't match, the file will be renamed.

<item><bf>--force-multi (-m)</bf> - If the MusicBrainz service returns more than 
one release for the DiskID of the FLAC file, then the software will not make any 
changes unless this option is specified. This applies to <bf>--check</bf>, 
<bf>--write</bf> and <bf>--rename</bf>. When multiple releases are returned, the 
first release found will be used to update the tags and rename the file as 
appropriate.

</itemize>

Example uses of these options could be as follows (note the use of -print0 and -
0 to handle filenames containing spaces):

<sect2>Report on the tags of all FLAC files

<p>

<code>
find /var/spool/music -name "*.flac" -print0 | xargs -0 flactag --check
</code>

<sect2>Tag and rename all flac files

<p>

<code>
find /var/spool/music -name "*.flac" -print0 | xargs -0 flactag --write --rename --force-multi
</code>

<sect1>File Renaming Details

<p>

The following configuration file (~/.flactag) entries affect file renaming:
<itemize>

<item><bf>BasePath</bf> - This is the 'root' directory of where your music files 
should be stored. (e.g. /var/spool/music)

<item><bf>SingleDiskFileName</bf> - This template is used to rename disks that 
are not part of a multi-disk set.

<item><bf>MultiDiskFileName</bf> - This template is used to rename disks that 
are part of a multi-disk set.

<item><bf>DirectoryCreatePermissions</bf> - The permissions to be set on any 
directory that is created (e.g. 0755).

</itemize>

The FileName templates can accept the following parameters:

<itemize>

<item><bf>%A</bf> - This will be replaced with the artist name

<item><bf>%S</bf> - This will be replaced with the artist sort name

<item><bf>%T</bf> - This will be replaced with the album title

<item><bf>%D</bf> - This will be replaced with the disk number

<item><bf>%Y</bf> - This will be replaced with the year

<item><bf>%G</bf> - This will be replaced with the genre

</itemize>

If any item is used but does not have a value, then it will be stored as (for 
example) NOGENRE (if the genre tag is empty).

<sect>Bugs / Limitations / Future Enhancements
<p>

<itemize>

<item>Once changes are written to the FLAC file, there is no way of reverting 
back to the original tags.

</itemize> 

<sect>Problems / Suggestions 
<p> 

If you have any problems with the software, or suggestions for improvements or 
new features, then please use the <url url="http://bugtracker.gently.org.uk/" 
name="Bug Tracking System"> to report them. 

<sect>Version History 
<sect1>v1.0-RC1 - xxx October 2006

<p>

<itemize>

<item>Add command line options and ability to handle more than one FLAC file

<item>Store cover art embedded into file tags

<item>Handle console screen size changes

<item>Retrieve more tags from MusicBrainz

</itemize>

<sect1>v0.04 - 23rd September 2006 

<p> 

<itemize> 

<item>Software released under the GPL 

<item>Add ability to rename file after tagging 

<item>Add logging capability (all log 
messages are queued and display on exit) 

<item>Add facility to download album cover art from Amazon 

<item>Store more Musicbrainz related information in tags 

</itemize> 

<sect1>v0.03 - 18th September 2006 
<p> 

<itemize> 

<item>Fix serious  bug in generating submission URLs 

</itemize> 

<sect1>v0.02 - 18th September 2006 
<p> 

<itemize> 

<item>Correctly handle multi-album disc sets 

<item>Include ARTISTSORT tag 

<item>Retrieve Amazon ASIN in preparation for downloading cover art 

</itemize> 

<sect1>v0.01 - 16th September 2006 

<p> 

<itemize> 

<item>Initial version 

</itemize> 

<em>$Id$</em> 

</article>